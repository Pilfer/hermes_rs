use crate::hermes;

build_instructions!(
  (0, Unreachable, ),
  (1, NewObjectWithBuffer, r0: Reg8, p0: UInt16, p1: UInt16, p2: UInt16, p3: UInt16),
  (2, NewObjectWithBufferLong, r0: Reg8, p0: UInt16, p1: UInt16, p2: UInt32, p3: UInt32),
  (3, NewObject, r0: Reg8),
  (4, NewObjectWithParent, r0: Reg8, r1: Reg8),
  (5, NewArrayWithBuffer, r0: Reg8, p0: UInt16, p1: UInt16, p2: UInt16),
  (6, NewArrayWithBufferLong, r0: Reg8, p0: UInt16, p1: UInt16, p2: UInt32),
  (7, NewArray, r0: Reg8, p0: UInt16),
  (8, Mov, r0: Reg8, r1: Reg8),
  (9, MovLong, r0: Reg32, r1: Reg32),
  (10, Negate, r0: Reg8, r1: Reg8),
  (11, Not, r0: Reg8, r1: Reg8),
  (12, BitNot, r0: Reg8, r1: Reg8),
  (13, TypeOf, r0: Reg8, r1: Reg8),
  (14, Eq, r0: Reg8, r1: Reg8, r2: Reg8),
  (15, StrictEq, r0: Reg8, r1: Reg8, r2: Reg8),
  (16, Neq, r0: Reg8, r1: Reg8, r2: Reg8),
  (17, StrictNeq, r0: Reg8, r1: Reg8, r2: Reg8),
  (18, Less, r0: Reg8, r1: Reg8, r2: Reg8),
  (19, LessEq, r0: Reg8, r1: Reg8, r2: Reg8),
  (20, Greater, r0: Reg8, r1: Reg8, r2: Reg8),
  (21, GreaterEq, r0: Reg8, r1: Reg8, r2: Reg8),
  (22, Add, r0: Reg8, r1: Reg8, r2: Reg8),
  (23, AddN, r0: Reg8, r1: Reg8, r2: Reg8),
  (24, Mul, r0: Reg8, r1: Reg8, r2: Reg8),
  (25, MulN, r0: Reg8, r1: Reg8, r2: Reg8),
  (26, Div, r0: Reg8, r1: Reg8, r2: Reg8),
  (27, DivN, r0: Reg8, r1: Reg8, r2: Reg8),
  (28, Mod, r0: Reg8, r1: Reg8, r2: Reg8),
  (29, Sub, r0: Reg8, r1: Reg8, r2: Reg8),
  (30, SubN, r0: Reg8, r1: Reg8, r2: Reg8),
  (31, LShift, r0: Reg8, r1: Reg8, r2: Reg8),
  (32, RShift, r0: Reg8, r1: Reg8, r2: Reg8),
  (33, URshift, r0: Reg8, r1: Reg8, r2: Reg8),
  (34, BitAnd, r0: Reg8, r1: Reg8, r2: Reg8),
  (35, BitXor, r0: Reg8, r1: Reg8, r2: Reg8),
  (36, BitOr, r0: Reg8, r1: Reg8, r2: Reg8),
  (37, Inc, r0: Reg8, r1: Reg8),
  (38, Dec, r0: Reg8, r1: Reg8),
  (39, InstanceOf, r0: Reg8, r1: Reg8, r2: Reg8),
  (40, IsIn, r0: Reg8, r1: Reg8, r2: Reg8),
  (41, GetEnvironment, r0: Reg8, p0: UInt8),
  (42, StoreToEnvironment, r0: Reg8, p0: UInt8, r1: Reg8),
  (43, StoreToEnvironmentL, r0: Reg8, p0: UInt16, r1: Reg8),
  (44, StoreNPToEnvironment, r0: Reg8, p0: UInt8, r1: Reg8),
  (45, StoreNPToEnvironmentL, r0: Reg8, p0: UInt16, r1: Reg8),
  (46, LoadFromEnvironment, r0: Reg8, r1: Reg8, p0: UInt8),
  (47, LoadFromEnvironmentL, r0: Reg8, r1: Reg8, p0: UInt16),
  (48, GetGlobalObject, r0: Reg8),
  (49, GetNewTarget, r0: Reg8),
  (50, CreateEnvironment, r0: Reg8),
  (51, DeclareGlobalVar, p0: StringIDUInt32),
  (52, GetByIdShort, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt8),
  (53, GetById, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt16),
  (54, GetByIdLong, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt32),
  (55, TryGetById, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt16),
  (56, TryGetByIdLong, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt32),
  (57, PutById, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt16),
  (58, PutByIdLong, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt32),
  (59, TryPutById, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt16),
  (60, TryPutByIdLong, r0: Reg8, r1: Reg8, p0: UInt8, p1: StringIDUInt32),
  (61, PutNewOwnByIdShort, r0: Reg8, r1: Reg8, p0: StringIDUInt8),
  (62, PutNewOwnById, r0: Reg8, r1: Reg8, p0: StringIDUInt16),
  (63, PutNewOwnByIdLong, r0: Reg8, r1: Reg8, p0: StringIDUInt32),
  (64, PutNewOwnNEById, r0: Reg8, r1: Reg8, p0: StringIDUInt16),
  (65, PutNewOwnNEByIdLong, r0: Reg8, r1: Reg8, p0: StringIDUInt32),
  (66, PutOwnByIndex, r0: Reg8, r1: Reg8, p0: UInt8),
  (67, PutOwnByIndexL, r0: Reg8, r1: Reg8, p0: UInt32),
  (68, PutOwnByVal, r0: Reg8, r1: Reg8, r2: Reg8, p0: UInt8),
  (69, DelById, r0: Reg8, r1: Reg8, p0: StringIDUInt16),
  (70, DelByIdLong, r0: Reg8, r1: Reg8, p0: StringIDUInt32),
  (71, GetByVal, r0: Reg8, r1: Reg8, r2: Reg8),
  (72, PutByVal, r0: Reg8, r1: Reg8, r2: Reg8),
  (73, DelByVal, r0: Reg8, r1: Reg8, r2: Reg8),
  (74, PutOwnGetterSetterByVal, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8, p0: UInt8),
  (75, GetPNameList, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8),
  (76, GetNextPName, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8),
  (77, Call, r0: Reg8, r1: Reg8, p0: UInt8),
  (78, Construct, r0: Reg8, r1: Reg8, p0: UInt8),
  (79, Call1, r0: Reg8, r1: Reg8, r2: Reg8),
  (80, CallDirect, r0: Reg8, p0: UInt8, p1: FunctionIDUInt16),
  (81, Call2, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8),
  (82, Call3, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8),
  (83, Call4, r0: Reg8, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8, r5: Reg8),
  (84, CallLong, r0: Reg8, r1: Reg8, p0: UInt32),
  (85, ConstructLong, r0: Reg8, r1: Reg8, p0: UInt32),
  (86, CallDirectLongIndex, r0: Reg8, p0: UInt8, p1: UInt32),
  (87, CallBuiltin, r0: Reg8, p0: UInt8, p1: UInt8),
  (88, CallBuiltinLong, r0: Reg8, p0: UInt8, p1: UInt32),
  (89, GetBuiltinClosure, r0: Reg8, p0: UInt8),
  (90, Ret, r0: Reg8),
  (91, Catch, r0: Reg8),
  (92, DirectEval, r0: Reg8, r1: Reg8),
  (93, Throw, r0: Reg8),
  (94, ThrowIfEmpty, r0: Reg8, r1: Reg8),
  (95, Debugger, ),
  (96, AsyncBreakCheck, ),
  (97, ProfilePoint, p0: UInt16),
  (98, CreateClosure, r0: Reg8, r1: Reg8, p0: FunctionIDUInt16),
  (99, CreateClosureLongIndex, r0: Reg8, r1: Reg8, p0: FunctionIDUInt32),
  (100, CreateGeneratorClosure, r0: Reg8, r1: Reg8, p0: FunctionIDUInt16),
  (101, CreateGeneratorClosureLongIndex, r0: Reg8, r1: Reg8, p0: FunctionIDUInt32),
  (102, CreateAsyncClosure, r0: Reg8, r1: Reg8, p0: FunctionIDUInt16),
  (103, CreateAsyncClosureLongIndex, r0: Reg8, r1: Reg8, p0: FunctionIDUInt32),
  (104, CreateThis, r0: Reg8, r1: Reg8, r2: Reg8),
  (105, SelectObject, r0: Reg8, r1: Reg8, r2: Reg8),
  (106, LoadParam, r0: Reg8, p0: UInt8),
  (107, LoadParamLong, r0: Reg8, p0: UInt32),
  (108, LoadConstUInt8, r0: Reg8, p0: UInt8),
  (109, LoadConstInt, r0: Reg8, p0: Imm32),
  (110, LoadConstDouble, r0: Reg8, p0: Double),
  (111, LoadConstBigInt, r0: Reg8, p0: BigIntIDUInt16),
  (112, LoadConstBigIntLongIndex, r0: Reg8, p0: BigIntIDUInt32),
  (113, LoadConstString, r0: Reg8, p0: StringIDUInt16),
  (114, LoadConstStringLongIndex, r0: Reg8, p0: StringIDUInt32),
  (115, LoadConstEmpty, r0: Reg8),
  (116, LoadConstUndefined, r0: Reg8),
  (117, LoadConstNull, r0: Reg8),
  (118, LoadConstTrue, r0: Reg8),
  (119, LoadConstFalse, r0: Reg8),
  (120, LoadConstZero, r0: Reg8),
  (121, CoerceThisNS, r0: Reg8, r1: Reg8),
  (122, LoadThisNS, r0: Reg8),
  (123, ToNumber, r0: Reg8, r1: Reg8),
  (124, ToNumeric, r0: Reg8, r1: Reg8),
  (125, ToInt32, r0: Reg8, r1: Reg8),
  (126, AddEmptyString, r0: Reg8, r1: Reg8),
  (127, GetArgumentsPropByVal, r0: Reg8, r1: Reg8, r2: Reg8),
  (128, GetArgumentsLength, r0: Reg8, r1: Reg8),
  (129, ReifyArguments, r0: Reg8),
  (130, CreateRegExp, r0: Reg8, p0: StringIDUInt32, p1: StringIDUInt32, p2: UInt32),
  (131, SwitchImm, r0: Reg8, p0: UInt32, p1: Addr32, p2: UInt32, p3: UInt32),
  (132, StartGenerator, ),
  (133, ResumeGenerator, r0: Reg8, r1: Reg8),
  (134, CompleteGenerator, ),
  (135, CreateGenerator, r0: Reg8, r1: Reg8, p0: FunctionIDUInt16),
  (136, CreateGeneratorLongIndex, r0: Reg8, r1: Reg8, p0: FunctionIDUInt32),
  (137, IteratorBegin, r0: Reg8, r1: Reg8),
  (138, IteratorNext, r0: Reg8, r1: Reg8, r2: Reg8),
  (139, IteratorClose, r0: Reg8, p0: UInt8),
  (140, Jmp, p0: Addr8),
  (141, JmpLong, p0: Addr32),
  (142, JmpTrue, p0: Addr8, r0: Reg8),
  (143, JmpTrueLong, p0: Addr32, r0: Reg8),
  (144, JmpFalse, p0: Addr8, r0: Reg8),
  (145, JmpFalseLong, p0: Addr32, r0: Reg8),
  (146, JmpUndefined, p0: Addr8, r0: Reg8),
  (147, JmpUndefinedLong, p0: Addr32, r0: Reg8),
  (148, SaveGenerator, p0: Addr8),
  (149, SaveGeneratorLong, p0: Addr32),
  (150, JLess, p0: Addr8, r0: Reg8, r1: Reg8),
  (151, JLessLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (152, JNotLess, p0: Addr8, r0: Reg8, r1: Reg8),
  (153, JNotLessLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (154, JLessN, p0: Addr8, r0: Reg8, r1: Reg8),
  (155, JLessNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (156, JNotLessN, p0: Addr8, r0: Reg8, r1: Reg8),
  (157, JNotLessNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (158, JLessEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (159, JLessEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (160, JNotLessEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (161, JNotLessEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (162, JLessEqualN, p0: Addr8, r0: Reg8, r1: Reg8),
  (163, JLessEqualNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (164, JNotLessEqualN, p0: Addr8, r0: Reg8, r1: Reg8),
  (165, JNotLessEqualNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (166, JGreater, p0: Addr8, r0: Reg8, r1: Reg8),
  (167, JGreaterLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (168, JNotGreater, p0: Addr8, r0: Reg8, r1: Reg8),
  (169, JNotGreaterLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (170, JGreaterN, p0: Addr8, r0: Reg8, r1: Reg8),
  (171, JGreaterNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (172, JNotGreaterN, p0: Addr8, r0: Reg8, r1: Reg8),
  (173, JNotGreaterNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (174, JGreaterEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (175, JGreaterEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (176, JNotGreaterEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (177, JNotGreaterEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (178, JGreaterEqualN, p0: Addr8, r0: Reg8, r1: Reg8),
  (179, JGreaterEqualNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (180, JNotGreaterEqualN, p0: Addr8, r0: Reg8, r1: Reg8),
  (181, JNotGreaterEqualNLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (182, JEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (183, JEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (184, JNotEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (185, JNotEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (186, JStrictEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (187, JStrictEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (188, JStrictNotEqual, p0: Addr8, r0: Reg8, r1: Reg8),
  (189, JStrictNotEqualLong, p0: Addr32, r0: Reg8, r1: Reg8),
  (190, Add32, r0: Reg8, r1: Reg8, r2: Reg8),
  (191, Sub32, r0: Reg8, r1: Reg8, r2: Reg8),
  (192, Mul32, r0: Reg8, r1: Reg8, r2: Reg8),
  (193, Divi32, r0: Reg8, r1: Reg8, r2: Reg8),
  (194, Divu32, r0: Reg8, r1: Reg8, r2: Reg8),
  (195, Loadi8, r0: Reg8, r1: Reg8, r2: Reg8),
  (196, Loadu8, r0: Reg8, r1: Reg8, r2: Reg8),
  (197, Loadi16, r0: Reg8, r1: Reg8, r2: Reg8),
  (198, Loadu16, r0: Reg8, r1: Reg8, r2: Reg8),
  (199, Loadi32, r0: Reg8, r1: Reg8, r2: Reg8),
  (200, Loadu32, r0: Reg8, r1: Reg8, r2: Reg8),
  (201, Store8, r0: Reg8, r1: Reg8, r2: Reg8),
  (202, Store16, r0: Reg8, r1: Reg8, r2: Reg8),
  (203, Store32, r0: Reg8, r1: Reg8, r2: Reg8)
);
