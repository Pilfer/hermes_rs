use crate::hermes;

build_instructions!(
  (0, Unreachable, ),
  (1, NewObjectWithBuffer, r1: Reg8, p1: UInt16, p2: UInt16, p3: UInt16, p4: UInt16),
  (2, NewObjectWithBufferLong, r1: Reg8, p1: UInt16, p2: UInt16, p3: UInt32, p4: UInt32),
  (3, NewObject, r1: Reg8),
  (4, NewObjectWithParent, r1: Reg8, r2: Reg8),
  (5, NewArrayWithBuffer, r1: Reg8, p1: UInt16, p2: UInt16, p3: UInt16),
  (6, NewArrayWithBufferLong, r1: Reg8, p1: UInt16, p2: UInt16, p3: UInt32),
  (7, NewArray, r1: Reg8, p1: UInt16),
  (8, Mov, r1: Reg8, r2: Reg8),
  (9, MovLong, r1: Reg32, r2: Reg32),
  (10, Negate, r1: Reg8, r2: Reg8),
  (11, Not, r1: Reg8, r2: Reg8),
  (12, BitNot, r1: Reg8, r2: Reg8),
  (13, TypeOf, r1: Reg8, r2: Reg8),
  (14, Eq, r1: Reg8, r2: Reg8, r3: Reg8),
  (15, StrictEq, r1: Reg8, r2: Reg8, r3: Reg8),
  (16, Neq, r1: Reg8, r2: Reg8, r3: Reg8),
  (17, StrictNeq, r1: Reg8, r2: Reg8, r3: Reg8),
  (18, Less, r1: Reg8, r2: Reg8, r3: Reg8),
  (19, LessEq, r1: Reg8, r2: Reg8, r3: Reg8),
  (20, Greater, r1: Reg8, r2: Reg8, r3: Reg8),
  (21, GreaterEq, r1: Reg8, r2: Reg8, r3: Reg8),
  (22, Add, r1: Reg8, r2: Reg8, r3: Reg8),
  (23, AddN, r1: Reg8, r2: Reg8, r3: Reg8),
  (24, Mul, r1: Reg8, r2: Reg8, r3: Reg8),
  (25, MulN, r1: Reg8, r2: Reg8, r3: Reg8),
  (26, Div, r1: Reg8, r2: Reg8, r3: Reg8),
  (27, DivN, r1: Reg8, r2: Reg8, r3: Reg8),
  (28, Mod, r1: Reg8, r2: Reg8, r3: Reg8),
  (29, Sub, r1: Reg8, r2: Reg8, r3: Reg8),
  (30, SubN, r1: Reg8, r2: Reg8, r3: Reg8),
  (31, LShift, r1: Reg8, r2: Reg8, r3: Reg8),
  (32, RShift, r1: Reg8, r2: Reg8, r3: Reg8),
  (33, URshift, r1: Reg8, r2: Reg8, r3: Reg8),
  (34, BitAnd, r1: Reg8, r2: Reg8, r3: Reg8),
  (35, BitXor, r1: Reg8, r2: Reg8, r3: Reg8),
  (36, BitOr, r1: Reg8, r2: Reg8, r3: Reg8),
  (37, Inc, r1: Reg8, r2: Reg8),
  (38, Dec, r1: Reg8, r2: Reg8),
  (39, InstanceOf, r1: Reg8, r2: Reg8, r3: Reg8),
  (40, IsIn, r1: Reg8, r2: Reg8, r3: Reg8),
  (41, GetEnvironment, r1: Reg8, p1: UInt8),
  (42, StoreToEnvironment, r1: Reg8, p1: UInt8, r2: Reg8),
  (43, StoreToEnvironmentL, r1: Reg8, p1: UInt16, r2: Reg8),
  (44, StoreNPToEnvironment, r1: Reg8, p1: UInt8, r2: Reg8),
  (45, StoreNPToEnvironmentL, r1: Reg8, p1: UInt16, r2: Reg8),
  (46, LoadFromEnvironment, r1: Reg8, r2: Reg8, p1: UInt8),
  (47, LoadFromEnvironmentL, r1: Reg8, r2: Reg8, p1: UInt16),
  (48, GetGlobalObject, r1: Reg8),
  (49, GetNewTarget, r1: Reg8),
  (50, CreateEnvironment, r1: Reg8),
  (51, DeclareGlobalVar, p1: StringIDUInt32),
  (52, GetByIdShort, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt8),
  (53, GetById, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt16),
  (54, GetByIdLong, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt32),
  (55, TryGetById, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt16),
  (56, TryGetByIdLong, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt32),
  (57, PutById, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt16),
  (58, PutByIdLong, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt32),
  (59, TryPutById, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt16),
  (60, TryPutByIdLong, r1: Reg8, r2: Reg8, p1: UInt8, p2: StringIDUInt32),
  (61, PutNewOwnByIdShort, r1: Reg8, r2: Reg8, p1: StringIDUInt8),
  (62, PutNewOwnById, r1: Reg8, r2: Reg8, p1: StringIDUInt16),
  (63, PutNewOwnByIdLong, r1: Reg8, r2: Reg8, p1: StringIDUInt32),
  (64, PutNewOwnNEById, r1: Reg8, r2: Reg8, p1: StringIDUInt16),
  (65, PutNewOwnNEByIdLong, r1: Reg8, r2: Reg8, p1: StringIDUInt32),
  (66, PutOwnByIndex, r1: Reg8, r2: Reg8, p1: UInt8),
  (67, PutOwnByIndexL, r1: Reg8, r2: Reg8, p1: UInt32),
  (68, PutOwnByVal, r1: Reg8, r2: Reg8, r3: Reg8, p1: UInt8),
  (69, DelById, r1: Reg8, r2: Reg8, p1: StringIDUInt16),
  (70, DelByIdLong, r1: Reg8, r2: Reg8, p1: StringIDUInt32),
  (71, GetByVal, r1: Reg8, r2: Reg8, r3: Reg8),
  (72, PutByVal, r1: Reg8, r2: Reg8, r3: Reg8),
  (73, DelByVal, r1: Reg8, r2: Reg8, r3: Reg8),
  (74, PutOwnGetterSetterByVal, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8, p1: UInt8),
  (75, GetPNameList, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8),
  (76, GetNextPName, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8, r5: Reg8),
  (77, Call, r1: Reg8, r2: Reg8, p1: UInt8),
  (78, Construct, r1: Reg8, r2: Reg8, p1: UInt8),
  (79, Call1, r1: Reg8, r2: Reg8, r3: Reg8),
  (80, CallDirect, r1: Reg8, p1: UInt8, p2: FunctionIDUInt16),
  (81, Call2, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8),
  (82, Call3, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8, r5: Reg8),
  (83, Call4, r1: Reg8, r2: Reg8, r3: Reg8, r4: Reg8, r5: Reg8, r6: Reg8),
  (84, CallLong, r1: Reg8, r2: Reg8, p1: UInt32),
  (85, ConstructLong, r1: Reg8, r2: Reg8, p1: UInt32),
  (86, CallDirectLongIndex, r1: Reg8, p1: UInt8, p2: UInt32),
  (87, CallBuiltin, r1: Reg8, p1: UInt8, p2: UInt8),
  (88, CallBuiltinLong, r1: Reg8, p1: UInt8, p2: UInt32),
  (89, GetBuiltinClosure, r1: Reg8, p1: UInt8),
  (90, Ret, r1: Reg8),
  (91, Catch, r1: Reg8),
  (92, DirectEval, r1: Reg8, r2: Reg8),
  (93, Throw, r1: Reg8),
  (94, ThrowIfEmpty, r1: Reg8, r2: Reg8),
  (95, Debugger, ),
  (96, AsyncBreakCheck, ),
  (97, ProfilePoint, p1: UInt16),
  (98, CreateClosure, r1: Reg8, r2: Reg8, p1: FunctionIDUInt16),
  (99, CreateClosureLongIndex, r1: Reg8, r2: Reg8, p1: FunctionIDUInt32),
  (100, CreateGeneratorClosure, r1: Reg8, r2: Reg8, p1: FunctionIDUInt16),
  (101, CreateGeneratorClosureLongIndex, r1: Reg8, r2: Reg8, p1: FunctionIDUInt32),
  (102, CreateAsyncClosure, r1: Reg8, r2: Reg8, p1: FunctionIDUInt16),
  (103, CreateAsyncClosureLongIndex, r1: Reg8, r2: Reg8, p1: FunctionIDUInt32),
  (104, CreateThis, r1: Reg8, r2: Reg8, r3: Reg8),
  (105, SelectObject, r1: Reg8, r2: Reg8, r3: Reg8),
  (106, LoadParam, r1: Reg8, p1: UInt8),
  (107, LoadParamLong, r1: Reg8, p1: UInt32),
  (108, LoadConstUInt8, r1: Reg8, p1: UInt8),
  (109, LoadConstInt, r1: Reg8, p1: Imm32),
  (110, LoadConstDouble, r1: Reg8, p1: Double),
  (111, LoadConstBigInt, r1: Reg8, p1: BigIntIDUInt16),
  (112, LoadConstBigIntLongIndex, r1: Reg8, p1: BigIntIDUInt32),
  (113, LoadConstString, r1: Reg8, p1: StringIDUInt16),
  (114, LoadConstStringLongIndex, r1: Reg8, p1: StringIDUInt32),
  (115, LoadConstEmpty, r1: Reg8),
  (116, LoadConstUndefined, r1: Reg8),
  (117, LoadConstNull, r1: Reg8),
  (118, LoadConstTrue, r1: Reg8),
  (119, LoadConstFalse, r1: Reg8),
  (120, LoadConstZero, r1: Reg8),
  (121, CoerceThisNS, r1: Reg8, r2: Reg8),
  (122, LoadThisNS, r1: Reg8),
  (123, ToNumber, r1: Reg8, r2: Reg8),
  (124, ToNumeric, r1: Reg8, r2: Reg8),
  (125, ToInt32, r1: Reg8, r2: Reg8),
  (126, AddEmptyString, r1: Reg8, r2: Reg8),
  (127, GetArgumentsPropByVal, r1: Reg8, r2: Reg8, r3: Reg8),
  (128, GetArgumentsLength, r1: Reg8, r2: Reg8),
  (129, ReifyArguments, r1: Reg8),
  (130, CreateRegExp, r1: Reg8, p1: StringIDUInt32, p2: StringIDUInt32, p3: UInt32),
  (131, SwitchImm, r1: Reg8, p1: UInt32, p2: Addr32, p3: UInt32, p4: UInt32),
  (132, StartGenerator, ),
  (133, ResumeGenerator, r1: Reg8, r2: Reg8),
  (134, CompleteGenerator, ),
  (135, CreateGenerator, r1: Reg8, r2: Reg8, p1: FunctionIDUInt16),
  (136, CreateGeneratorLongIndex, r1: Reg8, r2: Reg8, p1: FunctionIDUInt32),
  (137, IteratorBegin, r1: Reg8, r2: Reg8),
  (138, IteratorNext, r1: Reg8, r2: Reg8, r3: Reg8),
  (139, IteratorClose, r1: Reg8, p1: UInt8),
  (140, Jmp, p1: Addr8),
  (141, JmpLong, p1: Addr32),
  (142, JmpTrue, p1: Addr8, r1: Reg8),
  (143, JmpTrueLong, p1: Addr32, r1: Reg8),
  (144, JmpFalse, p1: Addr8, r1: Reg8),
  (145, JmpFalseLong, p1: Addr32, r1: Reg8),
  (146, JmpUndefined, p1: Addr8, r1: Reg8),
  (147, JmpUndefinedLong, p1: Addr32, r1: Reg8),
  (148, SaveGenerator, p1: Addr8),
  (149, SaveGeneratorLong, p1: Addr32),
  (150, JLess, p1: Addr8, r1: Reg8, r2: Reg8),
  (151, JLessLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (152, JNotLess, p1: Addr8, r1: Reg8, r2: Reg8),
  (153, JNotLessLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (154, JLessN, p1: Addr8, r1: Reg8, r2: Reg8),
  (155, JLessNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (156, JNotLessN, p1: Addr8, r1: Reg8, r2: Reg8),
  (157, JNotLessNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (158, JLessEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (159, JLessEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (160, JNotLessEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (161, JNotLessEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (162, JLessEqualN, p1: Addr8, r1: Reg8, r2: Reg8),
  (163, JLessEqualNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (164, JNotLessEqualN, p1: Addr8, r1: Reg8, r2: Reg8),
  (165, JNotLessEqualNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (166, JGreater, p1: Addr8, r1: Reg8, r2: Reg8),
  (167, JGreaterLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (168, JNotGreater, p1: Addr8, r1: Reg8, r2: Reg8),
  (169, JNotGreaterLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (170, JGreaterN, p1: Addr8, r1: Reg8, r2: Reg8),
  (171, JGreaterNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (172, JNotGreaterN, p1: Addr8, r1: Reg8, r2: Reg8),
  (173, JNotGreaterNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (174, JGreaterEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (175, JGreaterEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (176, JNotGreaterEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (177, JNotGreaterEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (178, JGreaterEqualN, p1: Addr8, r1: Reg8, r2: Reg8),
  (179, JGreaterEqualNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (180, JNotGreaterEqualN, p1: Addr8, r1: Reg8, r2: Reg8),
  (181, JNotGreaterEqualNLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (182, JEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (183, JEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (184, JNotEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (185, JNotEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (186, JStrictEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (187, JStrictEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (188, JStrictNotEqual, p1: Addr8, r1: Reg8, r2: Reg8),
  (189, JStrictNotEqualLong, p1: Addr32, r1: Reg8, r2: Reg8),
  (190, Add32, r1: Reg8, r2: Reg8, r3: Reg8),
  (191, Sub32, r1: Reg8, r2: Reg8, r3: Reg8),
  (192, Mul32, r1: Reg8, r2: Reg8, r3: Reg8),
  (193, Divi32, r1: Reg8, r2: Reg8, r3: Reg8),
  (194, Divu32, r1: Reg8, r2: Reg8, r3: Reg8),
  (195, Loadi8, r1: Reg8, r2: Reg8, r3: Reg8),
  (196, Loadu8, r1: Reg8, r2: Reg8, r3: Reg8),
  (197, Loadi16, r1: Reg8, r2: Reg8, r3: Reg8),
  (198, Loadu16, r1: Reg8, r2: Reg8, r3: Reg8),
  (199, Loadi32, r1: Reg8, r2: Reg8, r3: Reg8),
  (200, Loadu32, r1: Reg8, r2: Reg8, r3: Reg8),
  (201, Store8, r1: Reg8, r2: Reg8, r3: Reg8),
  (202, Store16, r1: Reg8, r2: Reg8, r3: Reg8),
  (203, Store32, r1: Reg8, r2: Reg8, r3: Reg8)
);